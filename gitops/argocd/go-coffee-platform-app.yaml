apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: go-coffee-platform
  namespace: argocd
  labels:
    app.kubernetes.io/name: go-coffee-platform
    app.kubernetes.io/part-of: go-coffee
  annotations:
    argocd.argoproj.io/sync-wave: "1"
  finalizers:
    - resources-finalizer.argocd.argoproj.io
spec:
  project: go-coffee
  source:
    repoURL: https://github.com/DimaJoyti/go-coffee.git
    targetRevision: main
    path: helm/go-coffee-platform
    helm:
      valueFiles:
        - values.yaml
        - values-production.yaml
      parameters:
        - name: global.environment
          value: production
        - name: global.imageRegistry
          value: ghcr.io/dimajoyti/go-coffee
        - name: global.domain
          value: gocoffee.dev
  destination:
    server: https://kubernetes.default.svc
    namespace: go-coffee
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
      allowEmpty: false
    syncOptions:
      - CreateNamespace=true
      - PrunePropagationPolicy=foreground
      - PruneLast=true
      - ApplyOutOfSyncOnly=true
      - RespectIgnoreDifferences=true
    retry:
      limit: 5
      backoff:
        duration: 5s
        factor: 2
        maxDuration: 3m
  revisionHistoryLimit: 10
  ignoreDifferences:
    - group: apps
      kind: Deployment
      jsonPointers:
        - /spec/replicas
    - group: autoscaling
      kind: HorizontalPodAutoscaler
      jsonPointers:
        - /spec/minReplicas
        - /spec/maxReplicas
  info:
    - name: Description
      value: Go Coffee Platform - Next-Generation Web3 Coffee Ecosystem
    - name: Documentation
      value: https://docs.gocoffee.dev
    - name: Repository
      value: https://github.com/DimaJoyti/go-coffee
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: go-coffee-infrastructure
  namespace: argocd
  labels:
    app.kubernetes.io/name: go-coffee-infrastructure
    app.kubernetes.io/part-of: go-coffee
  annotations:
    argocd.argoproj.io/sync-wave: "0"
  finalizers:
    - resources-finalizer.argocd.argoproj.io
spec:
  project: go-coffee
  source:
    repoURL: https://github.com/DimaJoyti/go-coffee.git
    targetRevision: main
    path: k8s/base
    kustomize:
      images:
        - ghcr.io/dimajoyti/go-coffee/api-gateway:v1.0.0
        - ghcr.io/dimajoyti/go-coffee/order-service:v1.0.0
        - ghcr.io/dimajoyti/go-coffee/payment-service:v1.0.0
        - ghcr.io/dimajoyti/go-coffee/kitchen-service:v1.0.0
  destination:
    server: https://kubernetes.default.svc
    namespace: go-coffee-system
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
      - CreateNamespace=true
      - PrunePropagationPolicy=foreground
    retry:
      limit: 3
      backoff:
        duration: 5s
        factor: 2
        maxDuration: 1m
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: go-coffee-monitoring
  namespace: argocd
  labels:
    app.kubernetes.io/name: go-coffee-monitoring
    app.kubernetes.io/part-of: go-coffee
  annotations:
    argocd.argoproj.io/sync-wave: "2"
  finalizers:
    - resources-finalizer.argocd.argoproj.io
spec:
  project: go-coffee
  sources:
    - repoURL: https://prometheus-community.github.io/helm-charts
      chart: kube-prometheus-stack
      targetRevision: 55.x.x
      helm:
        valueFiles:
          - $values/monitoring/prometheus/values.yaml
    - repoURL: https://grafana.github.io/helm-charts
      chart: grafana
      targetRevision: 7.x.x
      helm:
        valueFiles:
          - $values/monitoring/grafana/values.yaml
    - repoURL: https://jaegertracing.github.io/helm-charts
      chart: jaeger
      targetRevision: 0.x.x
      helm:
        valueFiles:
          - $values/monitoring/jaeger/values.yaml
    - repoURL: https://github.com/DimaJoyti/go-coffee.git
      targetRevision: main
      ref: values
  destination:
    server: https://kubernetes.default.svc
    namespace: go-coffee-monitoring
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
      - CreateNamespace=true
      - ServerSideApply=true
    retry:
      limit: 3
      backoff:
        duration: 5s
        factor: 2
        maxDuration: 1m
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: go-coffee-istio
  namespace: argocd
  labels:
    app.kubernetes.io/name: go-coffee-istio
    app.kubernetes.io/part-of: go-coffee
  annotations:
    argocd.argoproj.io/sync-wave: "-1"
  finalizers:
    - resources-finalizer.argocd.argoproj.io
spec:
  project: go-coffee
  sources:
    - repoURL: https://istio-release.storage.googleapis.com/charts
      chart: base
      targetRevision: 1.20.x
      helm:
        parameters:
          - name: global.meshID
            value: mesh1
          - name: global.multiCluster.clusterName
            value: go-coffee-cluster
          - name: global.network
            value: network1
    - repoURL: https://istio-release.storage.googleapis.com/charts
      chart: istiod
      targetRevision: 1.20.x
      helm:
        parameters:
          - name: global.meshID
            value: mesh1
          - name: global.multiCluster.clusterName
            value: go-coffee-cluster
          - name: global.network
            value: network1
          - name: pilot.traceSampling
            value: "1.0"
    - repoURL: https://istio-release.storage.googleapis.com/charts
      chart: gateway
      targetRevision: 1.20.x
      helm:
        parameters:
          - name: service.type
            value: LoadBalancer
  destination:
    server: https://kubernetes.default.svc
    namespace: istio-system
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
      - CreateNamespace=true
      - Replace=true
    retry:
      limit: 5
      backoff:
        duration: 10s
        factor: 2
        maxDuration: 5m
---
apiVersion: argoproj.io/v1alpha1
kind: AppProject
metadata:
  name: go-coffee
  namespace: argocd
  labels:
    app.kubernetes.io/name: go-coffee-project
    app.kubernetes.io/part-of: go-coffee
spec:
  description: Go Coffee Platform Project
  sourceRepos:
    - https://github.com/DimaJoyti/go-coffee.git
    - https://prometheus-community.github.io/helm-charts
    - https://grafana.github.io/helm-charts
    - https://jaegertracing.github.io/helm-charts
    - https://istio-release.storage.googleapis.com/charts
    - https://charts.bitnami.com/bitnami
    - https://helm.elastic.co
    - https://fluent.github.io/helm-charts
    - https://charts.jetstack.io
  destinations:
    - namespace: go-coffee
      server: https://kubernetes.default.svc
    - namespace: go-coffee-system
      server: https://kubernetes.default.svc
    - namespace: go-coffee-monitoring
      server: https://kubernetes.default.svc
    - namespace: istio-system
      server: https://kubernetes.default.svc
    - namespace: cert-manager
      server: https://kubernetes.default.svc
  clusterResourceWhitelist:
    - group: ""
      kind: Namespace
    - group: ""
      kind: PersistentVolume
    - group: storage.k8s.io
      kind: StorageClass
    - group: rbac.authorization.k8s.io
      kind: ClusterRole
    - group: rbac.authorization.k8s.io
      kind: ClusterRoleBinding
    - group: apiextensions.k8s.io
      kind: CustomResourceDefinition
    - group: admissionregistration.k8s.io
      kind: MutatingWebhookConfiguration
    - group: admissionregistration.k8s.io
      kind: ValidatingWebhookConfiguration
    - group: networking.istio.io
      kind: Gateway
    - group: networking.istio.io
      kind: VirtualService
    - group: networking.istio.io
      kind: DestinationRule
    - group: security.istio.io
      kind: PeerAuthentication
    - group: security.istio.io
      kind: AuthorizationPolicy
  namespaceResourceWhitelist:
    - group: ""
      kind: ConfigMap
    - group: ""
      kind: Secret
    - group: ""
      kind: Service
    - group: ""
      kind: ServiceAccount
    - group: apps
      kind: Deployment
    - group: apps
      kind: StatefulSet
    - group: apps
      kind: DaemonSet
    - group: batch
      kind: Job
    - group: batch
      kind: CronJob
    - group: networking.k8s.io
      kind: Ingress
    - group: networking.k8s.io
      kind: NetworkPolicy
    - group: autoscaling
      kind: HorizontalPodAutoscaler
    - group: policy
      kind: PodDisruptionBudget
    - group: monitoring.coreos.com
      kind: ServiceMonitor
    - group: monitoring.coreos.com
      kind: PrometheusRule
  roles:
    - name: admin
      description: Admin access to Go Coffee project
      policies:
        - p, proj:go-coffee:admin, applications, *, go-coffee/*, allow
        - p, proj:go-coffee:admin, repositories, *, *, allow
        - p, proj:go-coffee:admin, clusters, *, *, allow
      groups:
        - go-coffee:admins
    - name: developer
      description: Developer access to Go Coffee project
      policies:
        - p, proj:go-coffee:developer, applications, get, go-coffee/*, allow
        - p, proj:go-coffee:developer, applications, sync, go-coffee/*, allow
        - p, proj:go-coffee:developer, repositories, get, *, allow
      groups:
        - go-coffee:developers
    - name: viewer
      description: Read-only access to Go Coffee project
      policies:
        - p, proj:go-coffee:viewer, applications, get, go-coffee/*, allow
        - p, proj:go-coffee:viewer, repositories, get, *, allow
      groups:
        - go-coffee:viewers
