# Bright Data Hub Makefile
.PHONY: build-bright-data-hub run-bright-data-hub test-bright-data-hub clean-bright-data-hub docker-bright-data-hub

# Variables
BRIGHT_DATA_HUB_SERVICE = bright-data-hub-service
BRIGHT_DATA_HUB_PORT = 8095
DOCKER_IMAGE_BRIGHT_DATA_HUB = go-coffee/bright-data-hub

# Build Bright Data Hub service
build-bright-data-hub:
	@echo "üî® Building Bright Data Hub Service..."
	@cd cmd/bright-data-hub-service && go build -o ../../bin/$(BRIGHT_DATA_HUB_SERVICE) .
	@echo "‚úÖ Bright Data Hub Service built successfully"

# Run Bright Data Hub service
run-bright-data-hub: build-bright-data-hub
	@echo "üöÄ Starting Bright Data Hub Service on port $(BRIGHT_DATA_HUB_PORT)..."
	@BRIGHT_DATA_HUB_PORT=$(BRIGHT_DATA_HUB_PORT) ./bin/$(BRIGHT_DATA_HUB_SERVICE)

# Test Bright Data Hub
test-bright-data-hub:
	@echo "üß™ Running Bright Data Hub tests..."
	@go test -v ./pkg/bright-data-hub/...
	@echo "‚úÖ All Bright Data Hub tests passed"

# Test with coverage
test-bright-data-hub-coverage:
	@echo "üß™ Running Bright Data Hub tests with coverage..."
	@go test -v -cover ./pkg/bright-data-hub/...

# Benchmark tests
benchmark-bright-data-hub:
	@echo "‚ö° Running Bright Data Hub benchmarks..."
	@go test -bench=. ./pkg/bright-data-hub/...

# Clean build artifacts
clean-bright-data-hub:
	@echo "üßπ Cleaning Bright Data Hub build artifacts..."
	@rm -f bin/$(BRIGHT_DATA_HUB_SERVICE)
	@echo "‚úÖ Cleaned"

# Docker build
docker-bright-data-hub:
	@echo "üê≥ Building Bright Data Hub Docker image..."
	@docker build -f Dockerfile.bright-data-hub -t $(DOCKER_IMAGE_BRIGHT_DATA_HUB) .
	@echo "‚úÖ Docker image built: $(DOCKER_IMAGE_BRIGHT_DATA_HUB)"

# Docker run
docker-run-bright-data-hub: docker-bright-data-hub
	@echo "üê≥ Running Bright Data Hub in Docker..."
	@docker run -p $(BRIGHT_DATA_HUB_PORT):$(BRIGHT_DATA_HUB_PORT) \
		-e BRIGHT_DATA_HUB_PORT=$(BRIGHT_DATA_HUB_PORT) \
		-e BRIGHT_DATA_HUB_ENABLED=true \
		-e MCP_SERVER_URL=http://host.docker.internal:3001 \
		$(DOCKER_IMAGE_BRIGHT_DATA_HUB)

# Development setup
dev-bright-data-hub:
	@echo "üõ†Ô∏è  Setting up Bright Data Hub development environment..."
	@go mod tidy
	@go mod download
	@echo "‚úÖ Development environment ready"

# Install dependencies
deps-bright-data-hub:
	@echo "üì¶ Installing Bright Data Hub dependencies..."
	@go mod tidy
	@go mod download
	@echo "‚úÖ Dependencies installed"

# Format code
fmt-bright-data-hub:
	@echo "üé® Formatting Bright Data Hub code..."
	@go fmt ./pkg/bright-data-hub/...
	@go fmt ./cmd/bright-data-hub-service/...
	@echo "‚úÖ Code formatted"

# Lint code
lint-bright-data-hub:
	@echo "üîç Linting Bright Data Hub code..."
	@golangci-lint run ./pkg/bright-data-hub/...
	@golangci-lint run ./cmd/bright-data-hub-service/...
	@echo "‚úÖ Code linted"

# Generate documentation
docs-bright-data-hub:
	@echo "üìö Generating Bright Data Hub documentation..."
	@godoc -http=:6060 &
	@echo "‚úÖ Documentation server started at http://localhost:6060"

# Security scan
security-bright-data-hub:
	@echo "üîí Running security scan for Bright Data Hub..."
	@gosec ./pkg/bright-data-hub/...
	@gosec ./cmd/bright-data-hub-service/...
	@echo "‚úÖ Security scan completed"

# Performance test
perf-bright-data-hub:
	@echo "‚ö° Running performance tests for Bright Data Hub..."
	@go test -bench=. -benchmem ./pkg/bright-data-hub/...
	@echo "‚úÖ Performance tests completed"

# Integration test
integration-test-bright-data-hub:
	@echo "üîó Running integration tests for Bright Data Hub..."
	@go test -tags=integration ./pkg/bright-data-hub/...
	@echo "‚úÖ Integration tests completed"

# Load test
load-test-bright-data-hub:
	@echo "üèãÔ∏è  Running load tests for Bright Data Hub..."
	@echo "Starting service in background..."
	@./bin/$(BRIGHT_DATA_HUB_SERVICE) &
	@sleep 5
	@echo "Running load test..."
	@curl -X POST http://localhost:$(BRIGHT_DATA_HUB_PORT)/api/v1/bright-data/execute \
		-H "Content-Type: application/json" \
		-d '{"function": "search_engine_Bright_Data", "params": {"query": "test", "engine": "google"}}'
	@echo "‚úÖ Load test completed"

# Health check
health-bright-data-hub:
	@echo "‚ù§Ô∏è  Checking Bright Data Hub health..."
	@curl -f http://localhost:$(BRIGHT_DATA_HUB_PORT)/api/v1/bright-data/health || echo "Service not running"

# Status check
status-bright-data-hub:
	@echo "üìä Checking Bright Data Hub status..."
	@curl -s http://localhost:$(BRIGHT_DATA_HUB_PORT)/api/v1/bright-data/status | jq . || echo "Service not running"

# Demo endpoints
demo-bright-data-hub:
	@echo "üéØ Testing Bright Data Hub demo endpoints..."
	@echo "1. Health check:"
	@curl -s http://localhost:$(BRIGHT_DATA_HUB_PORT)/api/v1/bright-data/health | jq .
	@echo "\n2. Status check:"
	@curl -s http://localhost:$(BRIGHT_DATA_HUB_PORT)/api/v1/bright-data/status | jq .
	@echo "\n3. Search engine test:"
	@curl -X POST http://localhost:$(BRIGHT_DATA_HUB_PORT)/api/v1/bright-data/search/engine \
		-H "Content-Type: application/json" \
		-d '{"query": "coffee", "engine": "google"}' | jq .
	@echo "‚úÖ Demo completed"

# Complete setup
setup-bright-data-hub: deps-bright-data-hub build-bright-data-hub
	@echo "üéâ Bright Data Hub setup completed!"
	@echo "Run 'make run-bright-data-hub' to start the service"

# Complete test suite
test-all-bright-data-hub: test-bright-data-hub integration-test-bright-data-hub
	@echo "‚úÖ All Bright Data Hub tests completed"

# Development workflow
dev-workflow-bright-data-hub: fmt-bright-data-hub lint-bright-data-hub test-bright-data-hub build-bright-data-hub
	@echo "‚úÖ Development workflow completed"

# Production build
prod-build-bright-data-hub:
	@echo "üè≠ Building Bright Data Hub for production..."
	@CGO_ENABLED=0 GOOS=linux go build -a -installsuffix cgo -ldflags '-extldflags "-static"' \
		-o bin/$(BRIGHT_DATA_HUB_SERVICE) cmd/bright-data-hub-service/main.go
	@echo "‚úÖ Production build completed"

# Help
help-bright-data-hub:
	@echo "üöÄ Bright Data Hub Makefile Commands:"
	@echo ""
	@echo "Build & Run:"
	@echo "  build-bright-data-hub          - Build the service"
	@echo "  run-bright-data-hub            - Run the service"
	@echo "  docker-bright-data-hub         - Build Docker image"
	@echo "  docker-run-bright-data-hub     - Run in Docker"
	@echo ""
	@echo "Testing:"
	@echo "  test-bright-data-hub           - Run unit tests"
	@echo "  test-bright-data-hub-coverage  - Run tests with coverage"
	@echo "  integration-test-bright-data-hub - Run integration tests"
	@echo "  load-test-bright-data-hub      - Run load tests"
	@echo ""
	@echo "Development:"
	@echo "  dev-bright-data-hub            - Setup development environment"
	@echo "  fmt-bright-data-hub            - Format code"
	@echo "  lint-bright-data-hub           - Lint code"
	@echo "  security-bright-data-hub       - Security scan"
	@echo ""
	@echo "Monitoring:"
	@echo "  health-bright-data-hub         - Health check"
	@echo "  status-bright-data-hub         - Status check"
	@echo "  demo-bright-data-hub           - Demo endpoints"
	@echo ""
	@echo "Workflows:"
	@echo "  setup-bright-data-hub          - Complete setup"
	@echo "  dev-workflow-bright-data-hub   - Development workflow"
	@echo "  prod-build-bright-data-hub     - Production build"
