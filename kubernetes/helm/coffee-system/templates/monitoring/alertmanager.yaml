{{- if .Values.monitoring.enabled }}
{{- if .Values.monitoring.alertmanager.enabled }}
apiVersion: v1
kind: ConfigMap
metadata:
  name: alertmanager-config
  namespace: {{ .Values.namespace.name }}
data:
  alertmanager.yml: |
    global:
      resolve_timeout: 5m
      {{- if .Values.monitoring.alertmanager.slack.enabled }}
      slack_api_url: '{{ .Values.monitoring.alertmanager.slack.webhookUrl }}'
      {{- end }}

    route:
      group_by: ['alertname', 'job', 'severity']
      group_wait: 30s
      group_interval: 5m
      repeat_interval: 4h
      receiver: 'slack-notifications'
      routes:
      - match:
          severity: critical
        receiver: 'slack-critical'
        continue: true
      - match:
          severity: warning
        receiver: 'slack-warnings'
        continue: true
      - match_re:
          severity: ^(info|debug)$
        receiver: 'slack-info'

    receivers:
    - name: 'slack-notifications'
      slack_configs:
      - channel: '{{ .Values.monitoring.alertmanager.slack.channel }}'
        send_resolved: true
        title: '[{{ "{{" }} .Status | toUpper {{ "}}" }}] {{ "{{" }} .CommonLabels.alertname {{ "}}" }}'
        text: >-
          {{ "{{" }} range .Alerts {{ "}}" }}
            *Alert:* {{ "{{" }} .Annotations.summary {{ "}}" }}
            *Description:* {{ "{{" }} .Annotations.description {{ "}}" }}
            *Severity:* {{ "{{" }} .Labels.severity {{ "}}" }}
            *Job:* {{ "{{" }} .Labels.job {{ "}}" }}
            *Instance:* {{ "{{" }} .Labels.instance {{ "}}" }}
          {{ "{{" }} end {{ "}}" }}

    - name: 'slack-critical'
      slack_configs:
      - channel: '#alerts-critical'
        send_resolved: true
        title: '[{{ "{{" }} .Status | toUpper {{ "}}" }}] {{ "{{" }} .CommonLabels.alertname {{ "}}" }}'
        text: >-
          {{ "{{" }} range .Alerts {{ "}}" }}
            *Alert:* {{ "{{" }} .Annotations.summary {{ "}}" }}
            *Description:* {{ "{{" }} .Annotations.description {{ "}}" }}
            *Severity:* {{ "{{" }} .Labels.severity {{ "}}" }}
            *Job:* {{ "{{" }} .Labels.job {{ "}}" }}
            *Instance:* {{ "{{" }} .Labels.instance {{ "}}" }}
          {{ "{{" }} end {{ "}}" }}

    - name: 'slack-warnings'
      slack_configs:
      - channel: '#alerts-warnings'
        send_resolved: true
        title: '[{{ "{{" }} .Status | toUpper {{ "}}" }}] {{ "{{" }} .CommonLabels.alertname {{ "}}" }}'
        text: >-
          {{ "{{" }} range .Alerts {{ "}}" }}
            *Alert:* {{ "{{" }} .Annotations.summary {{ "}}" }}
            *Description:* {{ "{{" }} .Annotations.description {{ "}}" }}
            *Severity:* {{ "{{" }} .Labels.severity {{ "}}" }}
            *Job:* {{ "{{" }} .Labels.job {{ "}}" }}
            *Instance:* {{ "{{" }} .Labels.instance {{ "}}" }}
          {{ "{{" }} end {{ "}}" }}

    - name: 'slack-info'
      slack_configs:
      - channel: '#alerts-info'
        send_resolved: true
        title: '[{{ "{{" }} .Status | toUpper {{ "}}" }}] {{ "{{" }} .CommonLabels.alertname {{ "}}" }}'
        text: >-
          {{ "{{" }} range .Alerts {{ "}}" }}
            *Alert:* {{ "{{" }} .Annotations.summary {{ "}}" }}
            *Description:* {{ "{{" }} .Annotations.description {{ "}}" }}
            *Severity:* {{ "{{" }} .Labels.severity {{ "}}" }}
            *Job:* {{ "{{" }} .Labels.job {{ "}}" }}
            *Instance:* {{ "{{" }} .Labels.instance {{ "}}" }}
          {{ "{{" }} end {{ "}}" }}

    inhibit_rules:
      - source_match:
          severity: 'critical'
        target_match:
          severity: 'warning'
        equal: ['alertname', 'job']
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: alertmanager-pvc
  namespace: {{ .Values.namespace.name }}
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 2Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: alertmanager
  namespace: {{ .Values.namespace.name }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: alertmanager
  template:
    metadata:
      labels:
        app: alertmanager
    spec:
      containers:
        - name: alertmanager
          image: prom/alertmanager:latest
          ports:
            - containerPort: 9093
              name: http
          volumeMounts:
            - name: alertmanager-config
              mountPath: /etc/alertmanager/alertmanager.yml
              subPath: alertmanager.yml
            - name: alertmanager-data
              mountPath: /alertmanager
          args:
            - "--config.file=/etc/alertmanager/alertmanager.yml"
            - "--storage.path=/alertmanager"
          resources:
{{ toYaml .Values.monitoring.alertmanager.resources | indent 12 }}
      volumes:
        - name: alertmanager-config
          configMap:
            name: alertmanager-config
        - name: alertmanager-data
          persistentVolumeClaim:
            claimName: alertmanager-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: alertmanager
  namespace: {{ .Values.namespace.name }}
spec:
  selector:
    app: alertmanager
  ports:
    - port: 9093
      targetPort: 9093
  type: ClusterIP
{{- end }}
{{- end }}
