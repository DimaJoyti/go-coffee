# AlertManager Configuration for Go Coffee Platform
global:
  smtp_smarthost: 'localhost:587'
  smtp_from: 'alerts@go-coffee.com'
  smtp_auth_username: 'alerts@go-coffee.com'
  smtp_auth_password: 'your-smtp-password'
  slack_api_url: 'https://hooks.slack.com/services/YOUR/SLACK/WEBHOOK'

# Templates for notifications
templates:
  - '/etc/alertmanager/templates/*.tmpl'

# Route configuration
route:
  group_by: ['alertname', 'cluster', 'service']
  group_wait: 10s
  group_interval: 10s
  repeat_interval: 1h
  receiver: 'web.hook'
  routes:
    # Critical alerts go to PagerDuty and Slack
    - match:
        severity: critical
      receiver: 'critical-alerts'
      group_wait: 5s
      repeat_interval: 5m
    
    # Warning alerts go to Slack
    - match:
        severity: warning
      receiver: 'warning-alerts'
      group_wait: 30s
      repeat_interval: 30m
    
    # Infrastructure alerts
    - match:
        category: infrastructure
      receiver: 'infrastructure-alerts'
      group_wait: 15s
      repeat_interval: 15m
    
    # Application alerts
    - match:
        category: application
      receiver: 'application-alerts'
      group_wait: 20s
      repeat_interval: 20m
    
    # Database alerts
    - match:
        service: postgres
      receiver: 'database-alerts'
      group_wait: 10s
      repeat_interval: 10m
    
    # Redis alerts
    - match:
        service: redis
      receiver: 'cache-alerts'
      group_wait: 10s
      repeat_interval: 10m

# Inhibition rules
inhibit_rules:
  # Inhibit any warning if the same alert is already critical
  - source_match:
      severity: 'critical'
    target_match:
      severity: 'warning'
    equal: ['alertname', 'cluster', 'service']

  # Inhibit instance down alerts if the entire service is down
  - source_match:
      alertname: 'ServiceDown'
    target_match:
      alertname: 'InstanceDown'
    equal: ['service']

# Receivers configuration
receivers:
  # Default webhook receiver
  - name: 'web.hook'
    webhook_configs:
      - url: 'http://webhook-service:8080/alerts'
        send_resolved: true
        http_config:
          basic_auth:
            username: 'webhook-user'
            password: 'webhook-password'

  # Critical alerts - PagerDuty + Slack + Email
  - name: 'critical-alerts'
    pagerduty_configs:
      - routing_key: 'YOUR_PAGERDUTY_INTEGRATION_KEY'
        description: '{{ range .Alerts }}{{ .Annotations.summary }}{{ end }}'
        details:
          firing: '{{ .Alerts.Firing | len }}'
          resolved: '{{ .Alerts.Resolved | len }}'
          alertname: '{{ .GroupLabels.alertname }}'
          cluster: '{{ .GroupLabels.cluster }}'
          service: '{{ .GroupLabels.service }}'
    slack_configs:
      - api_url: 'https://hooks.slack.com/services/YOUR/CRITICAL/WEBHOOK'
        channel: '#critical-alerts'
        username: 'AlertManager'
        icon_emoji: ':fire:'
        title: 'CRITICAL: {{ .GroupLabels.alertname }}'
        text: '{{ range .Alerts }}{{ .Annotations.description }}{{ end }}'
        send_resolved: true
        actions:
          - type: button
            text: 'Runbook'
            url: '{{ (index .Alerts 0).Annotations.runbook_url }}'
          - type: button
            text: 'Query'
            url: '{{ (index .Alerts 0).GeneratorURL }}'
          - type: button
            text: 'Silence'
            url: '{{ .ExternalURL }}/#/silences/new?filter=%7B'
    email_configs:
      - to: 'oncall@go-coffee.com'
        subject: 'CRITICAL Alert: {{ .GroupLabels.alertname }}'
        body: |
          {{ range .Alerts }}
          Alert: {{ .Annotations.summary }}
          Description: {{ .Annotations.description }}
          Labels: {{ range .Labels.SortedPairs }}{{ .Name }}={{ .Value }} {{ end }}
          {{ end }}

  # Warning alerts - Slack only
  - name: 'warning-alerts'
    slack_configs:
      - api_url: 'https://hooks.slack.com/services/YOUR/WARNING/WEBHOOK'
        channel: '#alerts'
        username: 'AlertManager'
        icon_emoji: ':warning:'
        title: 'WARNING: {{ .GroupLabels.alertname }}'
        text: '{{ range .Alerts }}{{ .Annotations.description }}{{ end }}'
        send_resolved: true

  # Infrastructure alerts
  - name: 'infrastructure-alerts'
    slack_configs:
      - api_url: 'https://hooks.slack.com/services/YOUR/INFRA/WEBHOOK'
        channel: '#infrastructure'
        username: 'AlertManager'
        icon_emoji: ':gear:'
        title: 'Infrastructure Alert: {{ .GroupLabels.alertname }}'
        text: '{{ range .Alerts }}{{ .Annotations.description }}{{ end }}'
        send_resolved: true
    email_configs:
      - to: 'infrastructure@go-coffee.com'
        subject: 'Infrastructure Alert: {{ .GroupLabels.alertname }}'

  # Application alerts
  - name: 'application-alerts'
    slack_configs:
      - api_url: 'https://hooks.slack.com/services/YOUR/APP/WEBHOOK'
        channel: '#applications'
        username: 'AlertManager'
        icon_emoji: ':computer:'
        title: 'Application Alert: {{ .GroupLabels.alertname }}'
        text: '{{ range .Alerts }}{{ .Annotations.description }}{{ end }}'
        send_resolved: true

  # Database alerts
  - name: 'database-alerts'
    slack_configs:
      - api_url: 'https://hooks.slack.com/services/YOUR/DB/WEBHOOK'
        channel: '#database'
        username: 'AlertManager'
        icon_emoji: ':floppy_disk:'
        title: 'Database Alert: {{ .GroupLabels.alertname }}'
        text: '{{ range .Alerts }}{{ .Annotations.description }}{{ end }}'
        send_resolved: true
    email_configs:
      - to: 'dba@go-coffee.com'
        subject: 'Database Alert: {{ .GroupLabels.alertname }}'

  # Cache alerts
  - name: 'cache-alerts'
    slack_configs:
      - api_url: 'https://hooks.slack.com/services/YOUR/CACHE/WEBHOOK'
        channel: '#infrastructure'
        username: 'AlertManager'
        icon_emoji: ':zap:'
        title: 'Cache Alert: {{ .GroupLabels.alertname }}'
        text: '{{ range .Alerts }}{{ .Annotations.description }}{{ end }}'
        send_resolved: true
