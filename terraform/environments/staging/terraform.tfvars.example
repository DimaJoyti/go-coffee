# Staging Environment Configuration
# Copy this file to terraform.tfvars and update the values

# GCP Project Configuration
project_id = "go-coffee-staging-123456"
region     = "us-central1"
zone       = "us-central1-a"

# Notification Configuration
alert_email = "staging-alerts@example.com"

# Domain Configuration
domain_name = "staging.gocoffee.dev"
ssl_certificate_domains = [
  "staging.gocoffee.dev",
  "*.staging.gocoffee.dev",
  "api.staging.gocoffee.dev",
  "app.staging.gocoffee.dev"
]

# Retention Policies (Moderate for staging)
backup_retention_days     = 14
monitoring_retention_days = 30

# Security Configuration (Moderate for staging)
enable_audit_logging        = true
enable_vpc_flow_logs       = true
enable_binary_authorization = false
enable_pod_security_policy = false

# Maintenance Window (Staging-friendly)
maintenance_window = {
  day         = 6  # Saturday
  hour        = 4  # 4 AM UTC
  update_track = "regular"
}

# Node Pools Configuration
node_pools = {
  "ai-workloads" = {
    machine_type    = "n1-standard-2"
    min_count      = 0
    max_count      = 3
    disk_size_gb   = 100
    disk_type      = "pd-standard"
    preemptible    = true
    node_locations = ["us-central1-a"]
    taints = [
      {
        key    = "workload-type"
        value  = "ai"
        effect = "NO_SCHEDULE"
      }
    ]
    labels = {
      workload-type = "ai"
      environment   = "staging"
    }
  }
}

# Database Configuration (Staging-optimized)
database_flags = {
  "log_statement"                = "ddl"
  "log_min_duration_statement"   = "2000"
  "log_connections"              = "on"
  "log_disconnections"           = "on"
  "max_connections"             = "100"
  "shared_buffers"              = "128MB"
  "effective_cache_size"        = "512MB"
  "maintenance_work_mem"        = "32MB"
  "checkpoint_completion_target" = "0.9"
  "wal_buffers"                 = "8MB"
  "default_statistics_target"   = "100"
  "random_page_cost"            = "1.1"
  "effective_io_concurrency"    = "200"
}

# Redis Configuration (Staging-optimized)
redis_config = {
  "maxmemory-policy"     = "allkeys-lru"
  "timeout"              = "300"
  "tcp-keepalive"        = "60"
  "maxclients"           = "5000"
  "save"                 = "900 1 300 10 60 1000"
  "stop-writes-on-bgsave-error" = "yes"
  "rdbcompression"       = "yes"
  "rdbchecksum"          = "yes"
  "appendonly"           = "yes"
  "appendfsync"          = "everysec"
}

# Network Security Configuration
network_security = {
  enable_private_google_access = true
  enable_flow_logs            = true
  flow_logs_sampling          = 0.5
  enable_firewall_rules       = true
  allowed_ingress_cidrs       = ["10.0.0.0/8", "172.16.0.0/12", "192.168.0.0/16"]
  allowed_egress_cidrs        = ["0.0.0.0/0"]
}

# Monitoring Configuration
monitoring_config = {
  enable_uptime_checks     = true
  enable_log_based_metrics = true
  notification_channels    = []
  alert_policies = {
    "high-cpu" = {
      display_name = "High CPU Usage"
      conditions = [
        {
          display_name = "CPU usage above 75%"
          filter       = "resource.type=\"gke_container\""
          comparison   = "COMPARISON_GREATER_THAN"
          threshold    = 0.75
          duration     = "300s"
        }
      ]
    }
    "high-memory" = {
      display_name = "High Memory Usage"
      conditions = [
        {
          display_name = "Memory usage above 80%"
          filter       = "resource.type=\"gke_container\""
          comparison   = "COMPARISON_GREATER_THAN"
          threshold    = 0.8
          duration     = "300s"
        }
      ]
    }
  }
}

# Backup Configuration
backup_config = {
  database_backup_schedule    = "0 3 * * *"  # Daily at 3 AM
  database_backup_retention   = 14
  storage_backup_schedule     = "0 4 * * 0"  # Weekly on Sunday at 4 AM
  storage_backup_retention    = 4
  cross_region_backup_enabled = false
  backup_encryption_enabled   = true
}

# Cost Optimization (Staging-specific)
cost_optimization = {
  enable_preemptible_nodes     = false
  enable_cluster_autoscaling   = true
  enable_vertical_pod_autoscaling = true
  enable_node_auto_provisioning  = false
  auto_shutdown_schedule       = "0 22 * * 1-5"  # Shutdown at 10 PM on weekdays
  auto_startup_schedule        = "0 8 * * 1-5"   # Startup at 8 AM on weekdays
}

# Feature Flags (Staging configuration)
feature_flags = {
  enable_workload_identity     = true
  enable_binary_authorization  = false
  enable_istio                = true
  enable_knative              = false
  enable_anthos_service_mesh   = false
  enable_config_connector      = false
}
