// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v4.24.4
// source: ai_order.proto

package ai_order

import (
	"context"
	"google.golang.org/grpc"
	"google.golang.org/grpc/codes"
	"google.golang.org/grpc/status"
	"google.golang.org/protobuf/types/known/timestamppb"
)

// OrderStatus represents the status of an order
type OrderStatus int32

const (
	OrderStatus_ORDER_STATUS_UNSPECIFIED OrderStatus = 0
	OrderStatus_ORDER_STATUS_PENDING     OrderStatus = 1
	OrderStatus_ORDER_STATUS_CONFIRMED   OrderStatus = 2
	OrderStatus_ORDER_STATUS_PREPARING   OrderStatus = 3
	OrderStatus_ORDER_STATUS_READY       OrderStatus = 4
	OrderStatus_ORDER_STATUS_COMPLETED   OrderStatus = 5
	OrderStatus_ORDER_STATUS_CANCELLED   OrderStatus = 6
)

func (x OrderStatus) String() string {
	switch x {
	case OrderStatus_ORDER_STATUS_UNSPECIFIED:
		return "ORDER_STATUS_UNSPECIFIED"
	case OrderStatus_ORDER_STATUS_PENDING:
		return "ORDER_STATUS_PENDING"
	case OrderStatus_ORDER_STATUS_CONFIRMED:
		return "ORDER_STATUS_CONFIRMED"
	case OrderStatus_ORDER_STATUS_PREPARING:
		return "ORDER_STATUS_PREPARING"
	case OrderStatus_ORDER_STATUS_READY:
		return "ORDER_STATUS_READY"
	case OrderStatus_ORDER_STATUS_COMPLETED:
		return "ORDER_STATUS_COMPLETED"
	case OrderStatus_ORDER_STATUS_CANCELLED:
		return "ORDER_STATUS_CANCELLED"
	default:
		return "UNKNOWN"
	}
}

// OrderPriority represents the priority of an order
type OrderPriority int32

const (
	OrderPriority_ORDER_PRIORITY_UNSPECIFIED OrderPriority = 0
	OrderPriority_ORDER_PRIORITY_LOW         OrderPriority = 1
	OrderPriority_ORDER_PRIORITY_NORMAL      OrderPriority = 2
	OrderPriority_ORDER_PRIORITY_HIGH        OrderPriority = 3
	OrderPriority_ORDER_PRIORITY_URGENT      OrderPriority = 4
)

func (x OrderPriority) String() string {
	switch x {
	case OrderPriority_ORDER_PRIORITY_UNSPECIFIED:
		return "ORDER_PRIORITY_UNSPECIFIED"
	case OrderPriority_ORDER_PRIORITY_LOW:
		return "ORDER_PRIORITY_LOW"
	case OrderPriority_ORDER_PRIORITY_NORMAL:
		return "ORDER_PRIORITY_NORMAL"
	case OrderPriority_ORDER_PRIORITY_HIGH:
		return "ORDER_PRIORITY_HIGH"
	case OrderPriority_ORDER_PRIORITY_URGENT:
		return "ORDER_PRIORITY_URGENT"
	default:
		return "UNKNOWN"
	}
}

// Customer represents a customer
type Customer struct {
	Id        string            `json:"id"`
	Name      string            `json:"name"`
	Email     string            `json:"email"`
	Phone     string            `json:"phone"`
	AiProfile *AICustomerProfile `json:"ai_profile,omitempty"`
}

// AICustomerProfile represents AI insights about a customer
type AICustomerProfile struct {
	FavoriteItems        []string `json:"favorite_items"`
	LoyaltyScore         float64  `json:"loyalty_score"`
	PreferredTimeSlot    string   `json:"preferred_time_slot"`
	AverageOrderValue    float64  `json:"average_order_value"`
	TotalOrders          int32    `json:"total_orders"`
	DietaryPreferences   []string `json:"dietary_preferences"`
	SatisfactionScore    float64  `json:"satisfaction_score"`
}

// OrderItem represents an item in an order
type OrderItem struct {
	Id            string              `json:"id"`
	ProductId     string              `json:"product_id"`
	ProductName   string              `json:"product_name"`
	Quantity      int32               `json:"quantity"`
	UnitPrice     float64             `json:"unit_price"`
	TotalPrice    float64             `json:"total_price"`
	Customizations []string           `json:"customizations"`
	AiInsights    *AIItemInsights     `json:"ai_insights,omitempty"`
}

// AIItemInsights represents AI insights for order items
type AIItemInsights struct {
	PopularityScore          float64  `json:"popularity_score"`
	PreparationComplexity    float64  `json:"preparation_complexity"`
	SuggestedPairings        []string `json:"suggested_pairings"`
	EstimatedPrepTimeMinutes float64  `json:"estimated_prep_time_minutes"`
	DietaryInfo              string   `json:"dietary_info"`
}

// Order represents a complete order
type Order struct {
	Id                  string                 `json:"id"`
	Customer            *Customer              `json:"customer"`
	Items               []*OrderItem           `json:"items"`
	Status              OrderStatus            `json:"status"`
	Priority            OrderPriority          `json:"priority"`
	TotalAmount         float64                `json:"total_amount"`
	CreatedAt           *timestamppb.Timestamp `json:"created_at,omitempty"`
	UpdatedAt           *timestamppb.Timestamp `json:"updated_at,omitempty"`
	EstimatedCompletion *timestamppb.Timestamp `json:"estimated_completion,omitempty"`
	LocationId          string                 `json:"location_id"`
	AiInsights          *AIOrderInsights       `json:"ai_insights,omitempty"`
	SpecialInstructions string                 `json:"special_instructions"`
}

// AIOrderInsights represents AI insights for orders
type AIOrderInsights struct {
	ComplexityScore                float64  `json:"complexity_score"`
	EstimatedPrepTimeMinutes       float64  `json:"estimated_prep_time_minutes"`
	RecommendedAdditions           []string `json:"recommended_additions"`
	RevenueImpact                  float64  `json:"revenue_impact"`
	PeakTimeAnalysis               string   `json:"peak_time_analysis"`
	CustomerSatisfactionPrediction float64  `json:"customer_satisfaction_prediction"`
	OptimizationSuggestions        []string `json:"optimization_suggestions"`
}

// CreateOrderRequest represents a request to create an order
type CreateOrderRequest struct {
	Customer             *Customer    `json:"customer"`
	Items                []*OrderItem `json:"items"`
	LocationId           string       `json:"location_id"`
	SpecialInstructions  string       `json:"special_instructions"`
	EnableAiOptimization bool         `json:"enable_ai_optimization"`
}

// CreateOrderResponse represents a response to create order request
type CreateOrderResponse struct {
	Order                    *Order   `json:"order"`
	AiRecommendations        []string `json:"ai_recommendations"`
	EstimatedWaitTimeMinutes float64  `json:"estimated_wait_time_minutes"`
	Success                  bool     `json:"success"`
	Message                  string   `json:"message"`
}

// GetOrderRequest represents a request to get an order
type GetOrderRequest struct {
	OrderId           string `json:"order_id"`
	IncludeAiInsights bool   `json:"include_ai_insights"`
}

// GetOrderResponse represents a response to get order request
type GetOrderResponse struct {
	Order   *Order `json:"order"`
	Success bool   `json:"success"`
	Message string `json:"message"`
}

// ListOrdersRequest represents a request to list orders
type ListOrdersRequest struct {
	CustomerId        string                 `json:"customer_id"`
	LocationId        string                 `json:"location_id"`
	Status            OrderStatus            `json:"status"`
	FromDate          *timestamppb.Timestamp `json:"from_date,omitempty"`
	ToDate            *timestamppb.Timestamp `json:"to_date,omitempty"`
	PageSize          int32                  `json:"page_size"`
	PageToken         string                 `json:"page_token"`
	EnableAiFiltering bool                   `json:"enable_ai_filtering"`
}

// ListOrdersResponse represents a response to list orders request
type ListOrdersResponse struct {
	Orders        []*Order      `json:"orders"`
	NextPageToken string        `json:"next_page_token"`
	TotalCount    int32         `json:"total_count"`
	AiAnalytics   *AIAnalytics  `json:"ai_analytics,omitempty"`
	Success       bool          `json:"success"`
	Message       string        `json:"message"`
}

// AIAnalytics represents AI analytics for order lists
type AIAnalytics struct {
	AverageOrderValue       float64  `json:"average_order_value"`
	TotalRevenue            float64  `json:"total_revenue"`
	PopularItems            []string `json:"popular_items"`
	CustomerSatisfactionAvg float64  `json:"customer_satisfaction_avg"`
	PeakHourAnalysis        float64  `json:"peak_hour_analysis"`
}

// UpdateOrderStatusRequest represents a request to update order status
type UpdateOrderStatusRequest struct {
	OrderId        string      `json:"order_id"`
	NewStatus      OrderStatus `json:"new_status"`
	Reason         string      `json:"reason"`
	NotifyCustomer bool        `json:"notify_customer"`
}

// UpdateOrderStatusResponse represents a response to update order status request
type UpdateOrderStatusResponse struct {
	Order           *Order   `json:"order"`
	AiNotifications []string `json:"ai_notifications"`
	Success         bool     `json:"success"`
	Message         string   `json:"message"`
}

// CancelOrderRequest represents a request to cancel an order
type CancelOrderRequest struct {
	OrderId        string `json:"order_id"`
	Reason         string `json:"reason"`
	RefundRequired bool   `json:"refund_required"`
}

// CancelOrderResponse represents a response to cancel order request
type CancelOrderResponse struct {
	Order          *Order            `json:"order"`
	ImpactAnalysis *AIImpactAnalysis `json:"impact_analysis"`
	Success        bool              `json:"success"`
	Message        string            `json:"message"`
}

// AIImpactAnalysis represents AI analysis of order cancellation impact
type AIImpactAnalysis struct {
	RevenueImpact               float64  `json:"revenue_impact"`
	CustomerSatisfactionImpact  float64  `json:"customer_satisfaction_impact"`
	MitigationSuggestions       []string `json:"mitigation_suggestions"`
	KitchenEfficiencyImpact     float64  `json:"kitchen_efficiency_impact"`
}

// GetOrderRecommendationsRequest represents a request for order recommendations
type GetOrderRecommendationsRequest struct {
	CustomerId   string   `json:"customer_id"`
	LocationId   string   `json:"location_id"`
	CurrentItems []string `json:"current_items"`
	TimeOfDay    string   `json:"time_of_day"`
}

// GetOrderRecommendationsResponse represents a response with order recommendations
type GetOrderRecommendationsResponse struct {
	Recommendations []*RecommendedItem `json:"recommendations"`
	Reasoning       string             `json:"reasoning"`
	Success         bool               `json:"success"`
	Message         string             `json:"message"`
}

// RecommendedItem represents a recommended item
type RecommendedItem struct {
	ProductId         string  `json:"product_id"`
	ProductName       string  `json:"product_name"`
	ConfidenceScore   float64 `json:"confidence_score"`
	Reason            string  `json:"reason"`
	Price             float64 `json:"price"`
	EstimatedPrepTime float64 `json:"estimated_prep_time"`
}

// AnalyzeOrderPatternsRequest represents a request to analyze order patterns
type AnalyzeOrderPatternsRequest struct {
	LocationId   string                 `json:"location_id"`
	FromDate     *timestamppb.Timestamp `json:"from_date,omitempty"`
	ToDate       *timestamppb.Timestamp `json:"to_date,omitempty"`
	AnalysisType string                 `json:"analysis_type"`
}

// AnalyzeOrderPatternsResponse represents a response with pattern analysis
type AnalyzeOrderPatternsResponse struct {
	Insights        []*PatternInsight `json:"insights"`
	Recommendations []string          `json:"recommendations"`
	Success         bool              `json:"success"`
	Message         string            `json:"message"`
}

// PatternInsight represents an insight from pattern analysis
type PatternInsight struct {
	PatternType    string   `json:"pattern_type"`
	Description    string   `json:"description"`
	Confidence     float64  `json:"confidence"`
	AffectedItems  []string `json:"affected_items"`
	TimePeriod     string   `json:"time_period"`
	ImpactScore    float64  `json:"impact_score"`
}

// PredictCompletionTimeRequest represents a request to predict completion time
type PredictCompletionTimeRequest struct {
	OrderId          string `json:"order_id"`
	LocationId       string `json:"location_id"`
	CurrentQueueSize int32  `json:"current_queue_size"`
}

// PredictCompletionTimeResponse represents a response with completion time prediction
type PredictCompletionTimeResponse struct {
	EstimatedMinutes        float64                `json:"estimated_minutes"`
	ConfidenceLevel         float64                `json:"confidence_level"`
	Factors                 []string               `json:"factors"`
	EstimatedCompletionTime *timestamppb.Timestamp `json:"estimated_completion_time,omitempty"`
	Success                 bool                   `json:"success"`
	Message                 string                 `json:"message"`
}

// AIOrderServiceServer is the server API for AIOrderService service
type AIOrderServiceServer interface {
	CreateOrder(context.Context, *CreateOrderRequest) (*CreateOrderResponse, error)
	GetOrder(context.Context, *GetOrderRequest) (*GetOrderResponse, error)
	ListOrders(context.Context, *ListOrdersRequest) (*ListOrdersResponse, error)
	UpdateOrderStatus(context.Context, *UpdateOrderStatusRequest) (*UpdateOrderStatusResponse, error)
	CancelOrder(context.Context, *CancelOrderRequest) (*CancelOrderResponse, error)
	GetOrderRecommendations(context.Context, *GetOrderRecommendationsRequest) (*GetOrderRecommendationsResponse, error)
	AnalyzeOrderPatterns(context.Context, *AnalyzeOrderPatternsRequest) (*AnalyzeOrderPatternsResponse, error)
	PredictCompletionTime(context.Context, *PredictCompletionTimeRequest) (*PredictCompletionTimeResponse, error)
}

// UnimplementedAIOrderServiceServer can be embedded to have forward compatible implementations
type UnimplementedAIOrderServiceServer struct{}

func (UnimplementedAIOrderServiceServer) CreateOrder(context.Context, *CreateOrderRequest) (*CreateOrderResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateOrder not implemented")
}

func (UnimplementedAIOrderServiceServer) GetOrder(context.Context, *GetOrderRequest) (*GetOrderResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetOrder not implemented")
}

func (UnimplementedAIOrderServiceServer) ListOrders(context.Context, *ListOrdersRequest) (*ListOrdersResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListOrders not implemented")
}

func (UnimplementedAIOrderServiceServer) UpdateOrderStatus(context.Context, *UpdateOrderStatusRequest) (*UpdateOrderStatusResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateOrderStatus not implemented")
}

func (UnimplementedAIOrderServiceServer) CancelOrder(context.Context, *CancelOrderRequest) (*CancelOrderResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CancelOrder not implemented")
}

func (UnimplementedAIOrderServiceServer) GetOrderRecommendations(context.Context, *GetOrderRecommendationsRequest) (*GetOrderRecommendationsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetOrderRecommendations not implemented")
}

func (UnimplementedAIOrderServiceServer) AnalyzeOrderPatterns(context.Context, *AnalyzeOrderPatternsRequest) (*AnalyzeOrderPatternsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AnalyzeOrderPatterns not implemented")
}

func (UnimplementedAIOrderServiceServer) PredictCompletionTime(context.Context, *PredictCompletionTimeRequest) (*PredictCompletionTimeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PredictCompletionTime not implemented")
}

// RegisterAIOrderServiceServer registers the service implementation with the gRPC server
func RegisterAIOrderServiceServer(s grpc.ServiceRegistrar, srv AIOrderServiceServer) {
	// This would normally be generated by protoc-gen-go-grpc
	// For now, we'll just log that the service is registered
}
