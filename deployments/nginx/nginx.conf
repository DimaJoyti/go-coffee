# =============================================================================
# Go Coffee - Nginx Load Balancer Configuration
# =============================================================================
# High-performance reverse proxy and load balancer for Go Coffee microservices
# =============================================================================

# Worker processes configuration
worker_processes auto;
worker_rlimit_nofile 65535;

events {
    worker_connections 4096;
    use epoll;
    multi_accept on;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    # Enhanced logging with request tracking
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for" '
                    'rt=$request_time uct="$upstream_connect_time" '
                    'uht="$upstream_header_time" urt="$upstream_response_time"';

    log_format json_combined escape=json
        '{'
        '"time_local":"$time_local",'
        '"remote_addr":"$remote_addr",'
        '"remote_user":"$remote_user",'
        '"request":"$request",'
        '"status": "$status",'
        '"body_bytes_sent":"$body_bytes_sent",'
        '"request_time":"$request_time",'
        '"http_referrer":"$http_referer",'
        '"http_user_agent":"$http_user_agent",'
        '"upstream_addr":"$upstream_addr",'
        '"upstream_response_time":"$upstream_response_time",'
        '"upstream_connect_time":"$upstream_connect_time",'
        '"upstream_header_time":"$upstream_header_time"'
        '}';

    access_log /var/log/nginx/access.log json_combined;
    error_log /var/log/nginx/error.log warn;

    # Performance optimizations
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    keepalive_requests 1000;
    types_hash_max_size 2048;
    server_tokens off;

    # Client settings
    client_max_body_size 50M;
    client_body_timeout 60s;
    client_header_timeout 60s;
    client_body_buffer_size 128k;
    client_header_buffer_size 1k;
    large_client_header_buffers 4 4k;

    # Proxy settings
    proxy_connect_timeout 60s;
    proxy_send_timeout 60s;
    proxy_read_timeout 60s;
    proxy_buffer_size 4k;
    proxy_buffers 16 4k;
    proxy_busy_buffers_size 8k;
    proxy_temp_file_write_size 8k;
    proxy_max_temp_file_size 1024m;

    # Enable connection reuse
    upstream_keepalive_connections 32;
    upstream_keepalive_requests 100;
    upstream_keepalive_timeout 60s;

    # Enhanced Gzip compression
    gzip on;
    gzip_vary on;
    gzip_comp_level 6;
    gzip_min_length 1000;
    gzip_proxied any;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        text/csv
        application/javascript
        application/x-javascript
        application/xml+rss
        application/json
        application/xml
        application/rss+xml
        application/atom+xml
        image/svg+xml
        font/truetype
        font/opentype
        application/vnd.ms-fontobject
        application/font-woff
        application/font-woff2;

    # Brotli compression (if module available)
    # brotli on;
    # brotli_comp_level 6;
    # brotli_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

    # Enhanced rate limiting zones
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=auth:10m rate=5r/s;
    limit_req_zone $binary_remote_addr zone=ai_search:10m rate=20r/s;
    limit_req_zone $binary_remote_addr zone=web3:10m rate=15r/s;
    limit_req_zone $binary_remote_addr zone=redis_mcp:10m rate=25r/s;
    limit_req_zone $binary_remote_addr zone=health:10m rate=100r/s;

    # Connection limiting
    limit_conn_zone $binary_remote_addr zone=perip:10m;
    limit_conn_zone $server_name zone=perserver:10m;

    # Request size limiting
    limit_req_zone $binary_remote_addr zone=upload:10m rate=1r/s;

    # Enhanced upstream servers with load balancing
    upstream api_gateway {
        least_conn;
        server api-gateway:8080 max_fails=3 fail_timeout=30s weight=1;
        server api-gateway-2:8080 max_fails=3 fail_timeout=30s weight=1 backup;
        keepalive 32;
        keepalive_requests 100;
        keepalive_timeout 60s;
    }

    upstream producer_service {
        least_conn;
        server producer:3000 max_fails=3 fail_timeout=30s weight=1;
        server producer-2:3000 max_fails=3 fail_timeout=30s weight=1;
        server producer-3:3000 max_fails=3 fail_timeout=30s weight=1;
        keepalive 16;
    }

    upstream consumer_service {
        least_conn;
        server consumer:3001 max_fails=3 fail_timeout=30s weight=1;
        server consumer-2:3001 max_fails=3 fail_timeout=30s weight=1;
        keepalive 16;
    }

    upstream streams_service {
        server streams:3002 max_fails=3 fail_timeout=30s;
        keepalive 8;
    }

    upstream ai_search {
        least_conn;
        server ai-search:8092 max_fails=3 fail_timeout=30s weight=2;
        server ai-search-2:8092 max_fails=3 fail_timeout=30s weight=1;
        keepalive 32;
        keepalive_requests 50;
    }

    upstream auth_service {
        least_conn;
        server auth-service:8091 max_fails=3 fail_timeout=30s weight=1;
        server auth-service-2:8091 max_fails=3 fail_timeout=30s weight=1;
        keepalive 16;
    }

    upstream web3_gateway {
        least_conn;
        server web3-gateway:8081 max_fails=3 fail_timeout=30s weight=1;
        server web3-gateway-2:8081 max_fails=3 fail_timeout=30s weight=1;
        keepalive 16;
    }

    upstream wallet_service {
        least_conn;
        server wallet-service:8083 max_fails=3 fail_timeout=30s weight=1;
        server wallet-service-2:8083 max_fails=3 fail_timeout=30s weight=1;
        keepalive 16;
    }

    upstream defi_service {
        server defi-service:8082 max_fails=3 fail_timeout=30s;
        keepalive 8;
    }

    upstream redis_mcp {
        least_conn;
        server redis-mcp-server:8093 max_fails=3 fail_timeout=30s weight=1;
        server redis-mcp-server-2:8093 max_fails=3 fail_timeout=30s weight=1;
        keepalive 32;
        keepalive_requests 200;
    }

    # Main server block
    server {
        listen 80;
        server_name localhost;

        # Enhanced security headers
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header Referrer-Policy "no-referrer-when-downgrade" always;
        add_header Content-Security-Policy "default-src 'self' http: https: data: blob: 'unsafe-inline'" always;
        add_header X-Robots-Tag "noindex, nofollow" always;
        add_header X-Download-Options noopen always;
        add_header X-Permitted-Cross-Domain-Policies none always;

        # CORS headers
        add_header Access-Control-Allow-Origin "*" always;
        add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS, PATCH" always;
        add_header Access-Control-Allow-Headers "Origin, X-Requested-With, Content-Type, Accept, Authorization, X-API-Key, X-Client-Version, X-Request-ID" always;
        add_header Access-Control-Expose-Headers "X-Request-ID, X-Response-Time, X-Rate-Limit-Remaining" always;
        add_header Access-Control-Allow-Credentials true always;

        # Request ID for tracing
        add_header X-Request-ID $request_id always;

        # Handle preflight requests
        if ($request_method = 'OPTIONS') {
            add_header Access-Control-Allow-Origin "*" always;
            add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS, PATCH" always;
            add_header Access-Control-Allow-Headers "Origin, X-Requested-With, Content-Type, Accept, Authorization, X-API-Key, X-Client-Version, X-Request-ID" always;
            add_header Access-Control-Max-Age 86400 always;
            add_header Content-Type "text/plain charset=UTF-8" always;
            add_header Content-Length 0 always;
            return 204;
        }

        # Health check endpoint
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }

        # API Gateway
        location /api/v1/ {
            limit_req zone=api burst=20 nodelay;

            proxy_pass http://api_gateway;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Request-ID $request_id;

            # Timeouts
            proxy_connect_timeout 30s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;

            # Buffer settings
            proxy_buffering on;
            proxy_buffer_size 4k;
            proxy_buffers 8 4k;

            # Enable keepalive
            proxy_http_version 1.1;
            proxy_set_header Connection "";
        }

        # AI Search API
        location /api/v1/ai-search/ {
            limit_req zone=ai_search burst=30 nodelay;

            proxy_pass http://ai_search;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Request-ID $request_id;

            # Timeouts for AI operations
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;

            # Enable keepalive for AI search
            proxy_http_version 1.1;
            proxy_set_header Connection "";
        }

        # Auth Service API
        location /api/v1/auth/ {
            limit_req zone=auth burst=10 nodelay;
            
            proxy_pass http://auth_service;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Timeouts
            proxy_connect_timeout 30s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
        }

        # Web3 Gateway API
        location /api/v1/web3/ {
            limit_req zone=web3 burst=20 nodelay;

            proxy_pass http://web3_gateway;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Request-ID $request_id;

            # Timeouts for blockchain operations
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 120s;

            # Enable keepalive
            proxy_http_version 1.1;
            proxy_set_header Connection "";
        }

        # Wallet Service API
        location /api/v1/wallet/ {
            limit_req zone=web3 burst=15 nodelay;

            proxy_pass http://wallet_service;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Request-ID $request_id;

            # Timeouts for wallet operations
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 90s;

            # Enable keepalive
            proxy_http_version 1.1;
            proxy_set_header Connection "";
        }

        # DeFi Service API
        location /api/v1/defi/ {
            limit_req zone=web3 burst=10 nodelay;

            proxy_pass http://defi_service;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Request-ID $request_id;

            # Timeouts for DeFi operations
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 120s;

            # Enable keepalive
            proxy_http_version 1.1;
            proxy_set_header Connection "";
        }

        # Redis MCP API
        location /api/v1/redis-mcp/ {
            limit_req zone=redis_mcp burst=40 nodelay;

            proxy_pass http://redis_mcp;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Request-ID $request_id;

            # Timeouts for Redis operations
            proxy_connect_timeout 30s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;

            # Enable keepalive for high-frequency Redis operations
            proxy_http_version 1.1;
            proxy_set_header Connection "";
        }

        # Producer Service API
        location /api/v1/producer/ {
            limit_req zone=api burst=25 nodelay;

            proxy_pass http://producer_service;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Request-ID $request_id;

            # Timeouts
            proxy_connect_timeout 30s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;

            # Enable keepalive
            proxy_http_version 1.1;
            proxy_set_header Connection "";
        }

        # Consumer Service API
        location /api/v1/consumer/ {
            limit_req zone=api burst=20 nodelay;

            proxy_pass http://consumer_service;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Request-ID $request_id;

            # Timeouts
            proxy_connect_timeout 30s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;

            # Enable keepalive
            proxy_http_version 1.1;
            proxy_set_header Connection "";
        }

        # Streams Service API
        location /api/v1/streams/ {
            limit_req zone=api burst=15 nodelay;

            proxy_pass http://streams_service;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Request-ID $request_id;

            # Timeouts for streaming operations
            proxy_connect_timeout 30s;
            proxy_send_timeout 30s;
            proxy_read_timeout 60s;

            # Enable keepalive
            proxy_http_version 1.1;
            proxy_set_header Connection "";
        }

        # WebSocket support for real-time features
        location /ws/ {
            proxy_pass http://api_gateway;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Request-ID $request_id;

            # WebSocket timeouts
            proxy_read_timeout 86400;
            proxy_send_timeout 86400;
            proxy_connect_timeout 60s;
        }

        # Static files (if any)
        location /static/ {
            expires 1y;
            add_header Cache-Control "public, immutable";
        }

        # Default location
        location / {
            return 404 '{"error": "Not Found", "message": "Use /api/v1/ endpoints"}';
            add_header Content-Type application/json;
        }
    }

    # Monitoring endpoints (internal only)
    server {
        listen 8080;
        server_name localhost;
        
        # Allow only internal access
        allow 172.16.0.0/12;
        allow 10.0.0.0/8;
        allow 192.168.0.0/16;
        deny all;

        # Nginx status
        location /nginx_status {
            stub_status on;
            access_log off;
        }

        # Health checks for all services
        location /health/api-gateway {
            proxy_pass http://api_gateway/health;
            access_log off;
        }

        location /health/producer {
            proxy_pass http://producer_service/health;
            access_log off;
        }

        location /health/consumer {
            proxy_pass http://consumer_service/health;
            access_log off;
        }

        location /health/streams {
            proxy_pass http://streams_service/health;
            access_log off;
        }

        location /health/ai-search {
            proxy_pass http://ai_search/api/v1/ai-search/health;
            access_log off;
        }

        location /health/auth-service {
            proxy_pass http://auth_service/health;
            access_log off;
        }

        location /health/web3-gateway {
            proxy_pass http://web3_gateway/health;
            access_log off;
        }

        location /health/wallet-service {
            proxy_pass http://wallet_service/health;
            access_log off;
        }

        location /health/defi-service {
            proxy_pass http://defi_service/health;
            access_log off;
        }

        location /health/redis-mcp {
            proxy_pass http://redis_mcp/health;
            access_log off;
        }

        # Aggregate health check
        location /health/all {
            access_log off;
            content_by_lua_block {
                local http = require "resty.http"
                local httpc = http.new()

                local services = {
                    "api-gateway", "producer", "consumer", "streams",
                    "ai-search", "auth-service", "web3-gateway",
                    "wallet-service", "defi-service", "redis-mcp"
                }

                local results = {}
                local all_healthy = true

                for _, service in ipairs(services) do
                    local res, err = httpc:request_uri("http://127.0.0.1:8080/health/" .. service)
                    if not res or res.status ~= 200 then
                        results[service] = "unhealthy"
                        all_healthy = false
                    else
                        results[service] = "healthy"
                    end
                end

                local status = all_healthy and 200 or 503
                ngx.status = status
                ngx.header.content_type = "application/json"
                ngx.say(require("cjson").encode({
                    status = all_healthy and "healthy" or "unhealthy",
                    services = results,
                    timestamp = ngx.time()
                }))
            }
        }
    }
}
