# Build stage
FROM golang:1.24-alpine AS builder

# Install build dependencies
RUN apk add --no-cache git ca-certificates tzdata

# Set working directory
WORKDIR /workspace

# Copy go mod files
COPY go.mod go.sum ./

# Download dependencies
RUN go mod download

# Copy source code
COPY . .

# Build the orchestrator
RUN CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build \
    -ldflags="-w -s -X main.version=1.0.0 -X main.buildTime=$(date -u +%Y-%m-%dT%H:%M:%SZ)" \
    -a -installsuffix cgo \
    -o manager \
    ./cmd/llm-orchestrator/

# Final stage
FROM gcr.io/distroless/static:nonroot

# Copy timezone data
COPY --from=builder /usr/share/zoneinfo /usr/share/zoneinfo

# Copy CA certificates
COPY --from=builder /etc/ssl/certs/ca-certificates.crt /etc/ssl/certs/

# Copy the binary
COPY --from=builder /workspace/manager /manager

# Use nonroot user
USER 65532:65532

# Set entrypoint
ENTRYPOINT ["/manager"]

# Labels
LABEL org.opencontainers.image.title="LLM Orchestrator"
LABEL org.opencontainers.image.description="Cutting-edge control systems for containerized LLM workloads"
LABEL org.opencontainers.image.vendor="Go Coffee Platform"
LABEL org.opencontainers.image.version="1.0.0"
LABEL org.opencontainers.image.source="https://github.com/DimaJoyti/go-coffee"
LABEL org.opencontainers.image.licenses="MIT"
