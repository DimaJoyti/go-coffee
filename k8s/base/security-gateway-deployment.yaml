apiVersion: apps/v1
kind: Deployment
metadata:
  name: security-gateway
  namespace: go-coffee
  labels:
    app.kubernetes.io/name: security-gateway
    app.kubernetes.io/component: security
    app.kubernetes.io/part-of: go-coffee
spec:
  replicas: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: security-gateway
  template:
    metadata:
      labels:
        app.kubernetes.io/name: security-gateway
        app.kubernetes.io/component: security
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8082"
        prometheus.io/path: "/metrics"
    spec:
      containers:
      - name: security-gateway
        image: ghcr.io/dimajoyti/go-coffee/security-gateway:latest
        ports:
        - containerPort: 8082
          name: http
        env:
        - name: PORT
          valueFrom:
            configMapKeyRef:
              name: go-coffee-config
              key: SECURITY_GATEWAY_PORT
        - name: ENVIRONMENT
          valueFrom:
            configMapKeyRef:
              name: go-coffee-config
              key: ENVIRONMENT
        - name: LOG_LEVEL
          valueFrom:
            configMapKeyRef:
              name: go-coffee-config
              key: LOG_LEVEL
        - name: REDIS_URL
          value: "redis://redis-service:6379"
        - name: RATE_LIMIT_ENABLED
          valueFrom:
            configMapKeyRef:
              name: go-coffee-config
              key: RATE_LIMIT_ENABLED
        - name: WAF_ENABLED
          valueFrom:
            configMapKeyRef:
              name: go-coffee-config
              key: WAF_ENABLED
        livenessProbe:
          httpGet:
            path: /health
            port: 8082
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health
            port: 8082
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "256Mi"
            cpu: "200m"
        securityContext:
          runAsNonRoot: true
          runAsUser: 1001
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities:
            drop:
            - ALL

---
apiVersion: v1
kind: Service
metadata:
  name: security-gateway-service
  namespace: go-coffee
  labels:
    app.kubernetes.io/name: security-gateway
    app.kubernetes.io/component: security
spec:
  type: ClusterIP
  ports:
  - port: 8082
    targetPort: 8082
    protocol: TCP
    name: http
  selector:
    app.kubernetes.io/name: security-gateway

---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: security-gateway-hpa
  namespace: go-coffee
  labels:
    app.kubernetes.io/name: security-gateway
    app.kubernetes.io/component: security
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: security-gateway
  minReplicas: 2
  maxReplicas: 8
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 10
        periodSeconds: 60
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
      - type: Percent
        value: 50
        periodSeconds: 60
