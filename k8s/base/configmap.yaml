apiVersion: v1
kind: ConfigMap
metadata:
  name: go-coffee-config
  namespace: go-coffee
  labels:
    app.kubernetes.io/name: go-coffee
    app.kubernetes.io/component: config
data:
  # Application Configuration
  ENVIRONMENT: "production"
  LOG_LEVEL: "info"
  
  # Service Ports
  USER_GATEWAY_PORT: "8081"
  SECURITY_GATEWAY_PORT: "8082"
  WEB_UI_BACKEND_PORT: "8090"
  
  # Database Configuration
  POSTGRES_DB: "go_coffee"
  POSTGRES_USER: "go_coffee_user"
  
  # Redis Configuration
  REDIS_DB: "0"
  
  # Security Configuration
  RATE_LIMIT_ENABLED: "true"
  WAF_ENABLED: "true"
  
  # Monitoring Configuration
  METRICS_ENABLED: "true"
  HEALTH_CHECK_INTERVAL: "30s"

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-config
  namespace: go-coffee
  labels:
    app.kubernetes.io/name: go-coffee
    app.kubernetes.io/component: api-gateway
data:
  nginx.conf: |
    events {
        worker_connections 1024;
    }

    http {
        include       /etc/nginx/mime.types;
        default_type  application/octet-stream;

        # Logging
        log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                        '$status $body_bytes_sent "$http_referer" '
                        '"$http_user_agent" "$http_x_forwarded_for"';

        access_log /var/log/nginx/access.log main;
        error_log /var/log/nginx/error.log warn;

        # Basic settings
        sendfile on;
        tcp_nopush on;
        tcp_nodelay on;
        keepalive_timeout 65;
        types_hash_max_size 2048;

        # Gzip compression
        gzip on;
        gzip_vary on;
        gzip_min_length 1024;
        gzip_proxied any;
        gzip_comp_level 6;
        gzip_types
            text/plain
            text/css
            text/xml
            text/javascript
            application/json
            application/javascript
            application/xml+rss
            application/atom+xml
            image/svg+xml;

        # Rate limiting
        limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
        limit_req_zone $binary_remote_addr zone=auth:10m rate=5r/s;

        # Upstream servers
        upstream user_gateway {
            server user-gateway-service:8081;
            keepalive 32;
        }

        upstream security_gateway {
            server security-gateway-service:8082;
            keepalive 32;
        }

        upstream web_ui_backend {
            server web-ui-backend-service:8090;
            keepalive 32;
        }

        # Main server block
        server {
            listen 80;
            server_name _;

            # Security headers
            add_header X-Frame-Options DENY;
            add_header X-Content-Type-Options nosniff;
            add_header X-XSS-Protection "1; mode=block";
            add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload";

            # Health check endpoint
            location /health {
                access_log off;
                return 200 "healthy\n";
                add_header Content-Type text/plain;
            }

            # User Gateway routes
            location /api/v1/users/ {
                limit_req zone=api burst=20 nodelay;
                proxy_pass http://user_gateway;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
                proxy_connect_timeout 30s;
                proxy_send_timeout 30s;
                proxy_read_timeout 30s;
            }

            # Authentication routes
            location /api/v1/auth/ {
                limit_req zone=auth burst=10 nodelay;
                proxy_pass http://user_gateway;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
                proxy_connect_timeout 30s;
                proxy_send_timeout 30s;
                proxy_read_timeout 30s;
            }

            # Security Gateway routes
            location /api/v1/security/ {
                limit_req zone=api burst=20 nodelay;
                proxy_pass http://security_gateway;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
                proxy_connect_timeout 30s;
                proxy_send_timeout 30s;
                proxy_read_timeout 30s;
            }

            # Web UI Backend routes
            location /api/v1/ {
                limit_req zone=api burst=20 nodelay;
                proxy_pass http://web_ui_backend;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
                proxy_connect_timeout 30s;
                proxy_send_timeout 30s;
                proxy_read_timeout 30s;
            }

            # WebSocket support
            location /ws/ {
                proxy_pass http://web_ui_backend;
                proxy_http_version 1.1;
                proxy_set_header Upgrade $http_upgrade;
                proxy_set_header Connection "upgrade";
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
                proxy_connect_timeout 30s;
                proxy_send_timeout 30s;
                proxy_read_timeout 300s;
            }

            # Default route
            location / {
                return 404 "Not Found";
            }
        }
    }
